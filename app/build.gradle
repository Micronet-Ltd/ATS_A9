apply plugin: 'com.android.application'

android {
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        tab8keys
        obc5keys
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.micronet.dsc.ats"
        versionCode 404
        versionName "4.0.4"
        setProperty("archivesBaseName", "MicronetATS-v" + versionName)
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-debug"
            signingConfig null // trick to eliminate default signing config for debug so it can be specified in flavors
        }
    }

    flavorDimensions "device"
    productFlavors {
        tab8 {
            dimension "device"
            applicationIdSuffix ".tab8"
            versionNameSuffix "-tab8"
            buildConfigField 'String', 'FLAVOR_DEVICE', '"tab8"'
            minSdkVersion 28
            targetSdkVersion 28
            signingConfig signingConfigs.tab8keys
        }
        obc5 {
            dimension "device"
            applicationIdSuffix ".obc5"
            versionNameSuffix "-obc5"
            buildConfigField 'String', 'FLAVOR_DEVICE', '"obc5"'
            minSdkVersion 28
            targetSdkVersion 28
            signingConfig signingConfigs.obc5keys
        }
    }
}

dependencies {
    implementation 'com.android.support:support-core-utils:28.0.0'

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    obc5Implementation files('libs/micronet.hardware-obc5.aar')
}

def tab8_props = new Properties()
tab8_props.load(new FileInputStream(rootProject.file("tab8keys.properties")))
android.signingConfigs.tab8keys.storeFile rootProject.file(tab8_props.keyStore)
android.signingConfigs.tab8keys.storePassword tab8_props.keyStorePassword
android.signingConfigs.tab8keys.keyAlias tab8_props.keyAlias
android.signingConfigs.tab8keys.keyPassword tab8_props.keyAliasPassword

def obc5_props = new Properties()
obc5_props.load(new FileInputStream(rootProject.file("obc5keys.properties")))
android.signingConfigs.obc5keys.storeFile rootProject.file(obc5_props.keyStore)
android.signingConfigs.obc5keys.storePassword obc5_props.keyStorePassword
android.signingConfigs.obc5keys.keyAlias obc5_props.keyAlias
android.signingConfigs.obc5keys.keyPassword obc5_props.keyAliasPassword
